name: Build Docker Image

on: push

jobs:
  LevelOne-Linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Lint Runner
        uses: luke142367/Docker-Lint-Action@v1.0.0
        with:
          target: Dockerfile
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  LevelTwo-Linter:
      runs-on: ubuntu-latest
      needs: LevelOne-Linter
      steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Linting All Codebase
          uses: github/super-linter@v3
          env:
            VALIDATE_BASH: true
            VALIDATE_DOCKERFILE: true
            VALIDATE_ENV: true
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Building-Validity:
    runs-on: ubuntu-latest
    needs: LevelTwo-Linter
    steps:
      - uses: actions/checkout@v2
      - name: Docker Image Building Validity
        run: docker build . --file Dockerfile --tag docker-images:$(date +%s)

  Vulnerability-Checking:
    runs-on: ubuntu-latest
    needs: Building-Validity

    steps:
      - uses: actions/checkout@v2

      - name: Setting Image Tag
        id: vars
        run: echo ::set-output name=docker_tag::$(echo ${GITHUB_REF} | cut -d'/' -f3)-${GITHUB_SHA}

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag myapp:${{ steps.vars.outputs.docker_tag }}

      - name: Running Vulnerability Test
        uses: phonito/phonito-scanner-action@master
        with:
          image: myapp:${{ steps.vars.outputs.docker_tag }}
          phonito-token: '${{ secrets.SECURITY_API }}'
          fail-level: LOW